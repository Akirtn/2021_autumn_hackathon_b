{"version":3,"sources":["action/action.ts","utils/theme.tsx","services/DateDomainService.ts","services/FormatScheduleService.tsx","components/uiParts/calendar.tsx","components/uiParts/customSnackBar.tsx","components/uiParts/schedulePostForm.tsx","components/uiParts/customSizeAvatar.tsx","components/uiParts/profileTag.tsx","components/uiParts/profileCard.tsx","components/uiParts/topAppBar.tsx","components/templates/scheduleTemplate.tsx","components/pages/schedule.tsx","components/Loading.tsx","components/uiParts/loginForm.tsx","components/templates/signInTemplate.tsx","components/pages/signIn.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["api","window","location","host","requestConfig","withCredentials","headers","Api","login","email","password","a","axios","post","then","response","data","catch","error","writeSchedule","start_time","end_time","getMatchedSchedule","get","matchSchedule","getEmptySchedule","getMembers","Theme","color","primaryColor","secondaryColor","greyColor","font","fontFamily","background","DateDomainService","date","Date","getTime","getTimezoneOffset","unixTime","day","getUTCMinutes","getUTCHours","getMonth","getDate","month","getDay","miliSecondsTime","Number","moment","toISOString","FormatScheduleService","emptySchedules","dateDomainService","map","schedule","title","start","changeUnixTimeToFormattedString","start_at","end","end_at","matchedSchedules","matched_member","name","formatScheduleService","useStyles","makeStyles","theme","root","margin","spacing","alignItems","paper","minWidth","padding","width","Calendar","classes","useContext","ScheduleContext","selectUnixTime","setSelectUnixTime","useState","isReRender","setIsReRender","useEffect","className","Paper","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","listPlugin","initialView","locale","aspectRatio","height","selectable","selectLongPressDelay","headerToolbar","left","center","right","select","info","unix","events","getFormattedEmptySchedules","getFormattedMatchedSchedules","initialDate","format","displayEventTime","weekends","listDayFormat","year","weekday","listDaySideFormat","Alert","props","elevation","variant","marginTop","CustomizedSnackBar","open","setOpen","message","severity","handleClose","event","reason","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","display","flexDirection","container","justifyContent","fontSize","button","marginLeft","textField","marginRight","SchedulePostForm","setEmptySchedules","startTime","setStartTime","endTime","setEndTime","isSuccess","setWriteSchedule","setMatchSchedule","handleWriteSchedule","console","log","unixStartTime","unixEndTime","String","res","empty_schedules","handleMatchSchedule","Card","noValidate","autoComplete","utils","DateFnsUtils","Grid","TextField","id","label","value","onChange","target","type","InputLabelProps","shrink","inputProps","step","Button","onClick","Themes","fontWeight","cursor","size","avatarSize","CustomSizeAvatar","Avatar","split","flexWrap","ProfileTag","tagName","Chip","ProfileCard","profile","CardContent","style","tags","i","appBar","backgroundColor","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","flexGrow","toolbar","mixins","content","TopAppBar","React","selectProfle","setSelectProfle","profileAnchorEl","setProfileAnchorEl","profileOpen","setProfileOpen","userInfo","memberList","mouseOver","currentTarget","mouseOut","Popper","anchorEl","placement","CssBaseline","AppBar","position","clsx","Toolbar","Typography","noWrap","onMouseOver","onMouseOut","Drawer","List","ListItem","index","ListItemIcon","children","ScheduleTemplate","createContext","Schedule","useLocation","history","useHistory","state","setUserInfo","undefined","setMatchedSchedules","setMemberList","matched_schedules","members","localStorage","getItem","getUserjson","getUser","JSON","parse","push","pathname","Provider","top","transform","screen","opacity","circle","innerWidth","Loading","isLoading","CircularProgress","form","textAlign","LoginForm","emailText","setEmailText","passwordText","setPasswordText","hasError","setHasError","setIsLoading","item","xs","sm","md","lg","fullWidth","e","setItem","stringify","SignInTemplate","SignIn","App","exact","path","NoMatch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.029bccc4.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport Cookie from 'universal-cookie'\r\n\r\nimport {\r\n   UserInfo,\r\n   Members,\r\n   EmptySchedulesType,\r\n   MatchedSchedules,\r\n} from '../mocks/fetchData'\r\n\r\n//サーバー接続の切り替え\r\nlet api: any\r\nswitch (window.location.host) {\r\n   case 'http://localhost:3000':\r\n      api = 'https://dena-hackathon-2021.idichi.tk'\r\n      break\r\n   case '': //本番\r\n      api = 'https://dena-hackathon-2021.idichi.tk'\r\n      break\r\n   default:\r\n      api = 'https://dena-hackathon-2021.idichi.tk'\r\n}\r\n\r\nconst API_ORIGIN: string = 'http://localhost:3000' || ''\r\nconst requestConfig = {\r\n   // baseURL: API_ORIGIN,\r\n   withCredentials: true,\r\n   headers: {\r\n      'Content-Type': 'application/json',\r\n   },\r\n}\r\nconst errorHandler = (error: any) => {\r\n   //handle error\r\n   // if (error.response) {\r\n   //    // レスポンスは返ってくるが 200 番台じゃない場合\r\n   //    alert(error.response.data)\r\n   //    alert(error.response.status)\r\n   //    alert(error.response.headers)\r\n   // } else if (error.request) {\r\n   //    // レスポンスがない場合\r\n   //    alert(error.request)\r\n   // } else {\r\n   //    // それ以外\r\n   //    alert('Error' + error.message)\r\n   // }\r\n   // alert(error.config)\r\n}\r\n\r\nexport const Api = {\r\n   login: async (\r\n      email: string,\r\n      password: string\r\n   ): Promise<UserInfo | Error> => {\r\n      return await axios\r\n         .post(\r\n            `${api}/users/login/`,\r\n            {\r\n               email: email,\r\n               password: password,\r\n            },\r\n            requestConfig\r\n         )\r\n         .then(function (response) {\r\n            // handle success\r\n            // cookie.set('access_token', .response.data.key, { path: '/' })\r\n            return response.data\r\n         })\r\n         .catch(function (error) {\r\n            errorHandler(error)\r\n         })\r\n   },\r\n   writeSchedule: async (\r\n      start_time: string,\r\n      end_time: string\r\n   ): Promise<{ schedule_id: string } | Error> => {\r\n      return await axios\r\n         .post(\r\n            `${api}/users/empty_schedule/`,\r\n            {\r\n               start_time,\r\n               end_time,\r\n            },\r\n            requestConfig\r\n         )\r\n         .then(function (response) {\r\n            // handle success\r\n            return response.data\r\n         })\r\n         .catch(function (error) {\r\n            errorHandler(error)\r\n         })\r\n   },\r\n   getMatchedSchedule: async (): Promise<MatchedSchedules | Error> => {\r\n      return await axios\r\n         .get(`${api}/users/matched_schedule/`, requestConfig)\r\n         .then(function (response) {\r\n            // handle success\r\n            return response.data\r\n         })\r\n         .catch(function (error) {\r\n            errorHandler(error)\r\n         })\r\n   },\r\n   matchSchedule: async (): Promise<void | Error> => {\r\n      return await axios\r\n         .post(`${api}/users/matched_schedule/`, null, requestConfig)\r\n         .then(function () {\r\n            // handle success\r\n            return\r\n         })\r\n         .catch(function (error) {\r\n            errorHandler(error)\r\n         })\r\n   },\r\n   getEmptySchedule: async (): Promise<EmptySchedulesType | Error> => {\r\n      return await axios\r\n         .get(`${api}/users/empty_schedule/`, requestConfig)\r\n         .then(function (response) {\r\n            // handle success\r\n            return response.data\r\n         })\r\n         .catch(function (error) {\r\n            errorHandler(error)\r\n         })\r\n   },\r\n   getMembers: async (): Promise<Members | Error> => {\r\n      return await axios\r\n         .get(`${api}/users/members/`, requestConfig)\r\n         .then(function (response) {\r\n            // handle success\r\n            return response.data\r\n         })\r\n         .catch(function (error) {\r\n            errorHandler(error)\r\n         })\r\n   },\r\n}\r\n","type Theme = {\r\n   color: {\r\n      primaryColor: string\r\n      secondaryColor: string\r\n      greyColor: string\r\n   }\r\n   font: {\r\n      fontFamily: string\r\n   }\r\n   background: {\r\n      primaryColor: string\r\n   }\r\n}\r\n\r\nconst Theme: Theme = {\r\n   color: {\r\n      primaryColor: '#094067',\r\n      secondaryColor: '#ef4565',\r\n      greyColor: '#5f6c7b',\r\n   },\r\n   font: {\r\n      fontFamily:\r\n         \"'Avenir', 'Helvetica Neue', 'Helvetica', 'Arial', 'Hiragino Sans', 'ヒラギノ角ゴシック', YuGothic, 'Yu Gothic', 'メイリオ', Meiryo, 'ＭSＰゴシック', 'MS PGothic', sans-serif\",\r\n   },\r\n   background: {\r\n      primaryColor: '#fff',\r\n   },\r\n}\r\n\r\nexport default Theme\r\n","import moment from 'moment'\n\nexport class DateDomainService {\n   //日本時間に揃えてunixTimeを返すメソッド\n   public getJapanUnixTime(date: Date): number {\n      const japanUnixTime = new Date(\n         date.getTime() + (date.getTimezoneOffset() + 9 * 60) * 60 * 1000\n      ).getTime()\n      return japanUnixTime\n   }\n\n   //指定日前のunixtimeを返すメソッド\n   public getBeforeWeekUnixTime(unixTime: number, day: number): number {\n      const returnUnixtime = new Date(\n         new Date(unixTime).getTime() - day * 24 * 60 * 60 * 1000\n      ).getTime()\n      return returnUnixtime\n   }\n\n   //unixTimeから分を返すメソッド\n   public changeUnixTimeToMinutes(unixTime: number): number {\n      const minutes = new Date(unixTime * 1000).getUTCMinutes()\n      return minutes\n   }\n\n   //unixTimeから時間を返すメソッド\n   public changeUnixTimeToHour(unixTime: number): number {\n      const hour = new Date(unixTime * 1000).getUTCHours()\n      return hour\n   }\n\n   //unixTimeからその日のDate型を出すex)8月14日\n   public changeUnixTimeToFormatDayOfWeek(unixTime: number): string {\n      const date = new Date(unixTime)\n      const month = date.getMonth() + 1\n      const day = date.getDate()\n      const dayOfWeek = date.getDay()\n      const dayOfWeekStr = ['日', '月', '火', '水', '木', '金', '土'][dayOfWeek]\n      const text = month + '月' + day + '日' + '(' + dayOfWeekStr + ')'\n      return text\n   }\n\n   //unixTimeから ISO表記を返す関数\n   public changeUnixTimeToFormattedString(unixTime: string): string {\n      const miliSecondsTime = Number(unixTime) * 1000\n      const formattedTime = moment(miliSecondsTime).toISOString()\n      return formattedTime\n   }\n}\n","import {\n   MatchedSchedule,\n   MatchedSchedules,\n   EmptySchedule,\n   EmptySchedulesType,\n} from '../mocks/fetchData'\nimport Theme from '../utils/theme'\n\nimport { DateDomainService } from './DateDomainService'\n\nexport class FormatScheduleService {\n   //emptySchedules を fullCalendar に合う形で整形するメソッド\n   public getFormattedEmptySchedules(emptySchedules: EmptySchedulesType): any {\n      const dateDomainService = new DateDomainService()\n      return emptySchedules.map((schedule: EmptySchedule) => {\n         return {\n            title: '空き時間',\n            start: dateDomainService.changeUnixTimeToFormattedString(\n               schedule.start_at\n            ),\n            end: dateDomainService.changeUnixTimeToFormattedString(\n               schedule.end_at\n            ),\n            color: Theme.color.primaryColor,\n         }\n      })\n   }\n   //matchedSchedules を fullCalendar に合う形で整形するメソッド\n   public getFormattedMatchedSchedules(\n      matchedSchedules: MatchedSchedules\n   ): any {\n      const dateDomainService = new DateDomainService()\n      return matchedSchedules.map((schedule: MatchedSchedule) => {\n         return {\n            title: schedule.matched_member.name,\n            start: dateDomainService.changeUnixTimeToFormattedString(\n               schedule.start_at\n            ),\n            end: dateDomainService.changeUnixTimeToFormattedString(\n               schedule.end_at\n            ),\n            color: Theme.color.secondaryColor,\n         }\n      })\n   }\n}\n","// eslint-disable-next-line import/order\r\nimport FullCalendar from '@fullcalendar/react'\r\n\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\nimport listPlugin from '@fullcalendar/list'\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport moment from 'moment'\r\nimport React, { useEffect, useState, useContext, FC, memo } from 'react'\r\n\r\nimport { FormatScheduleService } from '../../services/FormatScheduleService'\r\nimport { ScheduleContext } from '../pages/schedule'\r\n\r\nconst formatScheduleService = new FormatScheduleService()\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n      '& > *': {\r\n         margin: theme.spacing(2),\r\n\r\n         alignItems: 'center',\r\n      },\r\n   },\r\n   paper: {\r\n      minWidth: '800px',\r\n      padding: theme.spacing(2),\r\n      alignItems: 'center',\r\n      width: 'auto',\r\n   },\r\n}))\r\n\r\nconst Calendar: FC = () => {\r\n   const classes = useStyles()\r\n   const {\r\n      selectUnixTime,\r\n      setSelectUnixTime,\r\n      matchedSchedules,\r\n      emptySchedules,\r\n   } = useContext(ScheduleContext)\r\n   const [isReRender, setIsReRender] = useState<boolean>(true)\r\n   const handleSelect = (info: any) => {\r\n      setSelectUnixTime(moment(info.start).unix())\r\n      setIsReRender(false)\r\n   }\r\n\r\n   useEffect(() => {\r\n      setIsReRender(true)\r\n   }, [isReRender])\r\n\r\n   return (\r\n      <div className={classes.root}>\r\n         <Paper className={classes.paper}>\r\n            <FullCalendar\r\n               plugins={[\r\n                  dayGridPlugin,\r\n                  timeGridPlugin,\r\n                  interactionPlugin,\r\n                  listPlugin,\r\n               ]}\r\n               initialView={'dayGridMonth'}\r\n               locale=\"ja\" // 日本語化\r\n               aspectRatio={1}\r\n               height=\"auto\"\r\n               selectable={true}\r\n               selectLongPressDelay={0}\r\n               headerToolbar={{\r\n                  left: 'prev',\r\n                  center: 'title',\r\n                  right: 'dayGridMonth,timeGridWeek,next',\r\n               }}\r\n               select={handleSelect}\r\n               events={[\r\n                  ...formatScheduleService.getFormattedEmptySchedules(\r\n                     emptySchedules\r\n                  ),\r\n                  ...formatScheduleService.getFormattedMatchedSchedules(\r\n                     matchedSchedules\r\n                  ),\r\n               ]}\r\n               initialDate={moment(selectUnixTime * 1000).format()}\r\n               displayEventTime={false}\r\n               weekends={true}\r\n            />\r\n            {isReRender && (\r\n               <FullCalendar\r\n                  plugins={[listPlugin]}\r\n                  initialView={'listDay'}\r\n                  locale=\"ja\" // 日本語化\r\n                  aspectRatio={1}\r\n                  height=\"auto\"\r\n                  selectable={false}\r\n                  selectLongPressDelay={0}\r\n                  headerToolbar={false}\r\n                  listDayFormat={{\r\n                     month: 'long',\r\n                     year: 'numeric',\r\n                     day: 'numeric',\r\n                     weekday: 'long',\r\n                  }}\r\n                  listDaySideFormat={false}\r\n                  events={formatScheduleService.getFormattedMatchedSchedules(\r\n                     matchedSchedules\r\n                  )}\r\n                  initialDate={moment(selectUnixTime * 1000).format()}\r\n                  weekends={true}\r\n               />\r\n            )}\r\n         </Paper>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Calendar\r\n","import Snackbar from '@material-ui/core/Snackbar'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport MuiAlert, { Color, AlertProps } from '@material-ui/lab/Alert'\r\nimport React, { useState, FC } from 'react'\r\n\r\ntype Props = {\r\n   message: string\r\n   severity: any\r\n}\r\n\r\ntype AlertMyProps = {\r\n   children?: React.ReactNode\r\n} & AlertProps\r\n\r\nconst Alert: React.FC<AlertMyProps> = (props) => {\r\n   return <MuiAlert elevation={6} variant=\"filled\" {...props} />\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n         marginTop: theme.spacing(2),\r\n      },\r\n   },\r\n}))\r\n\r\nconst CustomizedSnackBar: FC<Props> = (props) => {\r\n   const classes = useStyles()\r\n   const [open, setOpen] = useState<boolean>(true)\r\n\r\n   const { message, severity } = props\r\n\r\n   const handleClose = (event: any, reason?: string) => {\r\n      if (reason === 'clickaway') {\r\n         return\r\n      }\r\n      // console.log('handleClick')\r\n      setOpen(false)\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <div className={classes.root}>\r\n            <Snackbar\r\n               open={open}\r\n               autoHideDuration={3000}\r\n               onClose={handleClose}\r\n               anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n            >\r\n               <Alert\r\n                  onClose={(event) => {\r\n                     handleClose(event)\r\n                  }}\r\n                  severity={severity}\r\n               >\r\n                  {message}\r\n               </Alert>\r\n            </Snackbar>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\nexport default CustomizedSnackBar\r\n","import DateFnsUtils from '@date-io/date-fns'\r\nimport Button from '@material-ui/core/Button'\r\nimport Card from '@material-ui/core/Card'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport CopyIcon from '@material-ui/icons/FileCopy'\r\nimport MenuBookTwoToneIcon from '@material-ui/icons/MenuBookTwoTone'\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers'\r\nimport moment from 'moment'\r\nimport React, { FC, useState, useContext } from 'react'\r\n\r\nimport { Api } from '../../action/action'\r\nimport { ScheduleContext } from '../pages/schedule'\r\n\r\nimport CustomizedSnackBar from './customSnackBar'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n      width: '394px',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      margin: '20px',\r\n      padding: '16px',\r\n   },\r\n   container: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      flexDirection: 'row',\r\n   },\r\n   title: {\r\n      fontSize: '16px',\r\n   },\r\n   button: {\r\n      display: 'flex',\r\n      marginLeft: 'auto',\r\n   },\r\n   textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: 150,\r\n   },\r\n}))\r\n\r\nconst SchedulePostForm: FC = () => {\r\n   const classes = useStyles()\r\n   const { selectUnixTime, setEmptySchedules } = useContext(ScheduleContext)\r\n   const [startTime, setStartTime] = useState(moment().format('HH:mm'))\r\n   const [endTime, setEndTime] = useState(moment().format('HH:mm'))\r\n   const [writeSchedule, setWriteSchedule] = useState({\r\n      message: '空き時間を投稿',\r\n      severity: 'success',\r\n      isSuccess: false,\r\n   })\r\n   const [matchSchedule, setMatchSchedule] = useState({\r\n      message: 'マッチングを開始',\r\n      severity: 'info',\r\n      isSuccess: false,\r\n   })\r\n\r\n   const handleStartDateChange = (event: any) => {\r\n      setStartTime(event.target.value)\r\n   }\r\n   const handleEndDateChange = (event: any) => {\r\n      setEndTime(event.target.value)\r\n   }\r\n   const handleWriteSchedule = async () => {\r\n      console.log(startTime)\r\n      console.log(moment(selectUnixTime).format(`YYYY/MM/DD${startTime}`))\r\n      const unixStartTime = moment(\r\n         moment(selectUnixTime * 1000).format(`YYYY/MM/DD ${startTime}`)\r\n      ).unix()\r\n      const unixEndTime = moment(\r\n         moment(selectUnixTime * 1000).format(`YYYY/MM/DD ${endTime}`)\r\n      ).unix()\r\n      console.log(unixStartTime, unixEndTime)\r\n      await Api.writeSchedule(String(unixStartTime), String(unixEndTime)).then(\r\n         async (res) => {\r\n            if (res) {\r\n               setWriteSchedule({ ...writeSchedule, isSuccess: true })\r\n            }\r\n         }\r\n      )\r\n      await Api.getEmptySchedule().then((res: any) => {\r\n         if (res) {\r\n            setEmptySchedules(res.empty_schedules)\r\n         }\r\n      })\r\n   }\r\n   const handleMatchSchedule = async () => {\r\n      await Api.matchSchedule().then(() => {\r\n         setMatchSchedule({ ...matchSchedule, isSuccess: true })\r\n      })\r\n   }\r\n\r\n   return (\r\n      <Card className={classes.root}>\r\n         <div className={classes.title}>\r\n            {moment(selectUnixTime * 1000).format('YYYY/MM/DD')}\r\n         </div>\r\n         <form className={classes.container} noValidate autoComplete=\"off\">\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n               <Grid>\r\n                  <TextField\r\n                     id=\"time\"\r\n                     label=\"開始時間\"\r\n                     value={startTime}\r\n                     onChange={handleStartDateChange}\r\n                     type=\"time\"\r\n                     margin=\"normal\"\r\n                     className={classes.textField}\r\n                     InputLabelProps={{\r\n                        shrink: true,\r\n                     }}\r\n                     inputProps={{\r\n                        step: 300,\r\n                     }}\r\n                  />\r\n               </Grid>\r\n            </MuiPickersUtilsProvider>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n               <Grid>\r\n                  <TextField\r\n                     id=\"time\"\r\n                     label=\"終了時間\"\r\n                     margin=\"normal\"\r\n                     type=\"time\"\r\n                     className={classes.textField}\r\n                     value={endTime}\r\n                     onChange={handleEndDateChange}\r\n                     InputLabelProps={{\r\n                        shrink: true,\r\n                     }}\r\n                     inputProps={{\r\n                        step: 300,\r\n                     }}\r\n                  />\r\n               </Grid>\r\n            </MuiPickersUtilsProvider>\r\n         </form>\r\n         <div className={classes.button}>\r\n            <Button color=\"primary\" onClick={handleWriteSchedule}>\r\n               {writeSchedule.message}\r\n            </Button>\r\n            <Button color=\"secondary\" onClick={handleMatchSchedule}>\r\n               {matchSchedule.message}\r\n            </Button>\r\n         </div>\r\n         {writeSchedule.isSuccess && (\r\n            <CustomizedSnackBar\r\n               message={writeSchedule.message + 'しました'}\r\n               severity={writeSchedule.severity}\r\n            />\r\n         )}\r\n         {matchSchedule.isSuccess && (\r\n            <CustomizedSnackBar\r\n               message={matchSchedule.message + 'しました'}\r\n               severity={matchSchedule.severity}\r\n            />\r\n         )}\r\n      </Card>\r\n   )\r\n}\r\n\r\nexport default SchedulePostForm\r\n","import Avatar from '@material-ui/core/Avatar'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport React, { FC } from 'react'\r\n\r\nimport Themes from '../../utils/theme'\r\n\r\ntype Props = {\r\n   name: string\r\n   avatarSize: MakeProps\r\n}\r\n\r\ntype MakeProps = {\r\n   width: string\r\n   height: string\r\n}\r\n\r\nconst useStyles = makeStyles<Theme, MakeProps>((theme) => ({\r\n   root: {\r\n      fontFamily: Themes.font.fontFamily,\r\n      fontWeight: 'bold',\r\n      display: 'flex',\r\n      '& > *': {\r\n         margin: theme.spacing(1),\r\n      },\r\n      cursor: 'pointer',\r\n   },\r\n   size: {\r\n      width: (avatarSize) => avatarSize.width,\r\n      height: (avatarSize) => avatarSize.height,\r\n   },\r\n}))\r\n\r\nconst CustomSizeAvatar: FC<Props> = (props) => {\r\n   const { avatarSize, name } = props\r\n   const classes = useStyles(avatarSize)\r\n\r\n   return (\r\n      <div className={classes.root}>\r\n         <Avatar className={classes.size}>{name.split('')[0]}</Avatar>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default CustomSizeAvatar\r\n","import Avatar from '@material-ui/core/Avatar'\r\nimport Chip from '@material-ui/core/Chip'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport DoneIcon from '@material-ui/icons/Done'\r\nimport FaceIcon from '@material-ui/icons/Face'\r\nimport LabelIcon from '@material-ui/icons/Label'\r\nimport React, { FC } from 'react'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      flexWrap: 'wrap',\r\n      '& > *': {\r\n         margin: theme.spacing(0.5),\r\n      },\r\n   },\r\n}))\r\n\r\nconst ProfileTag: FC<any> = (props) => {\r\n   const classes = useStyles()\r\n   const { tagName } = props\r\n\r\n   return (\r\n      <div className={classes.root}>\r\n         <Chip label={tagName} color=\"primary\" />\r\n      </div>\r\n   )\r\n}\r\nexport default ProfileTag\r\n","import Button from '@material-ui/core/Button'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer'\r\nimport React, { FC } from 'react'\r\n\r\nimport Themes from '../../utils/theme'\r\n\r\nimport ProfileTag from './profileTag'\r\nconst useStyles = makeStyles({\r\n   root: {\r\n      minWidth: 190,\r\n      fontWeight: 'bold',\r\n      fontFamily: Themes.font.fontFamily,\r\n   },\r\n   title: {\r\n      fontSize: 14,\r\n      fontWeight: 'bold',\r\n      fontFamily: Themes.font.fontFamily,\r\n   },\r\n})\r\n\r\nconst ProfileCard: FC<any> = (props) => {\r\n   const { profile } = props\r\n   const classes = useStyles()\r\n\r\n   return (\r\n      <Card className={classes.root} variant=\"outlined\">\r\n         <CardContent>\r\n            <div\r\n               style={{\r\n                  fontFamily: Themes.font.fontFamily,\r\n                  fontSize: '16px',\r\n                  display: 'flex',\r\n                  flexDirection: 'row',\r\n                  alignItems: 'center',\r\n               }}\r\n            >\r\n               <div style={{ padding: '4px 0px' }}>名前：</div>\r\n               <div>{profile.name}</div>\r\n            </div>\r\n            <div>\r\n               <div\r\n                  style={{\r\n                     fontFamily: Themes.font.fontFamily,\r\n                     fontSize: '16px',\r\n                     display: 'flex',\r\n                     flexDirection: 'row',\r\n                     alignItems: 'center',\r\n                  }}\r\n               >\r\n                  <LocalOfferIcon />\r\n                  <div>タグ一覧</div>\r\n               </div>\r\n               <div\r\n                  style={{\r\n                     fontFamily: Themes.font.fontFamily,\r\n                     display: 'flex',\r\n                     flexDirection: 'row',\r\n                     alignItems: 'center',\r\n                  }}\r\n               >\r\n                  {profile.tags.map((tagName: any, i: number) => {\r\n                     return <ProfileTag tagName={tagName} key={'tags' + i} />\r\n                  })}\r\n               </div>\r\n            </div>\r\n         </CardContent>\r\n      </Card>\r\n   )\r\n}\r\n\r\nexport default ProfileCard\r\n","import AppBar from '@material-ui/core/AppBar'\r\nimport Card from '@material-ui/core/Card'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport Popper from '@material-ui/core/Popper'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\r\nimport clsx from 'clsx'\r\nimport React, { FC, useContext } from 'react'\r\n\r\nimport Theme from '../../utils/theme'\r\nimport { ScheduleContext } from '../pages/schedule'\r\n\r\nimport CustomSizeAvatar from './customSizeAvatar'\r\nimport ProfileCard from './profileCard'\r\n\r\nconst drawerWidth = 240\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n      display: 'flex',\r\n      fontFamily: Theme.font.fontFamily,\r\n   },\r\n   appBar: {\r\n      fontFamily: Theme.font.fontFamily,\r\n      backgroundColor: Theme.color.primaryColor,\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n         easing: theme.transitions.easing.sharp,\r\n         duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n   },\r\n   appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n         easing: theme.transitions.easing.sharp,\r\n         duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n   },\r\n   title: {\r\n      flexGrow: 1,\r\n      fontWeight: 'bold',\r\n      fontFamily: Theme.font.fontFamily,\r\n   },\r\n   toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n   },\r\n   content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n   },\r\n}))\r\n\r\nconst TopAppBar: FC = (props) => {\r\n   const classes = useStyles()\r\n   const [selectProfle, setSelectProfle] = React.useState([])\r\n   const [profileAnchorEl, setProfileAnchorEl] = React.useState(null)\r\n   const [profileOpen, setProfileOpen] = React.useState(false)\r\n\r\n   const { userInfo, memberList } = useContext(ScheduleContext)\r\n   const avatarSize: { width: string; height: string } = {\r\n      width: '40px',\r\n      height: '40px',\r\n   }\r\n\r\n   const mouseOver = (value: any) => (event: any) => {\r\n      setProfileAnchorEl(event.currentTarget)\r\n      setSelectProfle(value)\r\n      setProfileOpen(true)\r\n   }\r\n\r\n   const mouseOut = () => {\r\n      setProfileAnchorEl(null)\r\n      setProfileOpen(false)\r\n   }\r\n   return (\r\n      <div className={classes.root}>\r\n         <Popper\r\n            open={profileOpen}\r\n            anchorEl={profileAnchorEl}\r\n            placement={'top'}\r\n            style={{ zIndex: 30000 }}\r\n         >\r\n            <ProfileCard profile={selectProfle} />\r\n         </Popper>\r\n         <CssBaseline />\r\n         <AppBar\r\n            position=\"fixed\"\r\n            className={clsx(classes.appBar, {\r\n               [classes.appBarShift]: false,\r\n            })}\r\n         >\r\n            <Toolbar>\r\n               <Typography variant=\"h6\" noWrap className={classes.title}>\r\n                  スケジュール管理\r\n               </Typography>\r\n               <div\r\n                  onMouseOver={mouseOver(userInfo)}\r\n                  onMouseOut={() => {\r\n                     mouseOut()\r\n                  }}\r\n               >\r\n                  <CustomSizeAvatar\r\n                     avatarSize={avatarSize}\r\n                     name={userInfo.name}\r\n                  />\r\n               </div>\r\n            </Toolbar>\r\n         </AppBar>\r\n         <Drawer variant=\"permanent\">\r\n            <div className={classes.toolbar} />\r\n            <List>\r\n               <ListItem\r\n                  style={{\r\n                     fontWeight: 'bold',\r\n                     fontSize: '11px',\r\n                     fontFamily: Theme.font.fontFamily,\r\n                     display: 'flex',\r\n                     justifyContent: 'center',\r\n                  }}\r\n               >\r\n                  仲良くな\r\n                  <br />\r\n                  れるかも?\r\n               </ListItem>\r\n               {memberList.map((value: any, index: any) => (\r\n                  <ListItem button key={index}>\r\n                     <ListItemIcon\r\n                        onMouseOver={mouseOver(value)}\r\n                        onMouseOut={() => {\r\n                           mouseOut()\r\n                        }}\r\n                     >\r\n                        <CustomSizeAvatar\r\n                           avatarSize={avatarSize}\r\n                           name={value.name}\r\n                        />\r\n                     </ListItemIcon>\r\n                  </ListItem>\r\n               ))}\r\n            </List>\r\n         </Drawer>\r\n         <main className={classes.content}>\r\n            <div className={classes.toolbar} />\r\n            {props.children}\r\n         </main>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default TopAppBar\r\n","import { makeStyles, Theme } from '@material-ui/core/styles'\r\nimport moment from 'moment'\r\nimport React, { FC } from 'react'\r\n\r\nimport Calendar from '../uiParts/calendar'\r\nimport SchedulePostForm from '../uiParts/schedulePostForm'\r\nimport TopAppBar from '../uiParts/topAppBar'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n      display: 'flex',\r\n   },\r\n   content: {\r\n      margin: '-24px 0px 0px 60px',\r\n   },\r\n}))\r\nconst ScheduleTemplate: FC = () => {\r\n   const classes = useStyles()\r\n\r\n   return (\r\n      <div className={classes.root}>\r\n         <TopAppBar>\r\n            <div className={classes.content}>\r\n               <Calendar />\r\n               <SchedulePostForm />\r\n            </div>\r\n         </TopAppBar>\r\n      </div>\r\n   )\r\n}\r\nexport default ScheduleTemplate\r\n","import moment from 'moment'\r\nimport React, { createContext, FC, useEffect, useState } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\n\r\nimport { Api } from '../../action/action'\r\nimport {\r\n   user_info,\r\n   empty_schedules,\r\n   matched_schedules,\r\n   members,\r\n} from '../../mocks/fetchData'\r\nimport {\r\n   UserInfo,\r\n   Members,\r\n   EmptySchedulesType,\r\n   MatchedSchedule,\r\n   MatchedSchedules,\r\n} from '../../types/types'\r\nimport ScheduleTemplate from '../templates/scheduleTemplate'\r\n\r\ntype ContextProps = {\r\n   userInfo: UserInfo\r\n   setUserInfo: any\r\n   emptySchedules: EmptySchedulesType\r\n   setEmptySchedules: any\r\n   matchedSchedules: MatchedSchedules\r\n   setMatchedSchedules: any\r\n   memberList: Members\r\n   setMemberList: any\r\n   // startDate: any\r\n   // setStartDate: any\r\n   // endDate: any\r\n   // setEndDate: any\r\n   selectUnixTime: any\r\n   setSelectUnixTime: any\r\n}\r\n\r\nexport const ScheduleContext = createContext({} as ContextProps)\r\n\r\nconst Schedule: FC = () => {\r\n   const location = useLocation()\r\n   const history = useHistory()\r\n   const [userInfo, setUserInfo] = useState<any>(location.state)\r\n   const [emptySchedules, setEmptySchedules] = useState<any>(undefined)\r\n   const [matchedSchedules, setMatchedSchedules] = useState<any>(undefined)\r\n   const [memberList, setMemberList] = useState<any>(undefined)\r\n   const [selectUnixTime, setSelectUnixTime] = useState<number>(moment().unix())\r\n\r\n   useEffect(() => {\r\n      // console.log(localStorage.getItem('userInfo'))\r\n      // console.log(location.state)\r\n      Api.getMatchedSchedule().then((res: any) => {\r\n         if (res) {\r\n            setMatchedSchedules(res.matched_schedules)\r\n         }\r\n      })\r\n      Api.getEmptySchedule().then((res: any) => {\r\n         if (res) {\r\n            setEmptySchedules(res.empty_schedules)\r\n         }\r\n      })\r\n\r\n      Api.getMembers().then((res: any) => {\r\n         if (res) {\r\n            setMemberList(res.members)\r\n         }\r\n      })\r\n      if (localStorage.getItem('userInfo')) {\r\n         const getUserjson: any = localStorage.getItem('userInfo')\r\n         console.log(getUserjson)\r\n         const getUser: any = JSON.parse(getUserjson)\r\n         console.log(getUser)\r\n         setUserInfo(getUser)\r\n      } else {\r\n         history.push({ pathname: '/' })\r\n      }\r\n   }, [])\r\n\r\n   // ここにユーザ情報入ってます\r\n   console.log({ userInfo, emptySchedules, matchedSchedules, memberList })\r\n   return (\r\n      <div>\r\n         {userInfo && emptySchedules && matchedSchedules && memberList && (\r\n            <ScheduleContext.Provider\r\n               value={{\r\n                  userInfo,\r\n                  setUserInfo,\r\n                  emptySchedules,\r\n                  setEmptySchedules,\r\n                  matchedSchedules,\r\n                  setMatchedSchedules,\r\n                  memberList,\r\n                  setMemberList,\r\n                  selectUnixTime,\r\n                  setSelectUnixTime,\r\n               }}\r\n            >\r\n               <ScheduleTemplate />\r\n            </ScheduleContext.Provider>\r\n         )}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Schedule\r\n","import CircularProgress from '@material-ui/core/CircularProgress'\nimport { makeStyles } from '@material-ui/core/styles'\nimport React, { FC } from 'react'\n\nimport Theme from '../utils/theme'\n\ntype Props = {\n   isLoading: boolean\n}\n\nconst useStyles = makeStyles(() => ({\n   root: {\n      position: 'absolute',\n      left: '50%',\n      top: '50%',\n      width: '100%',\n      transform: 'translate(-50%, -50%)',\n      height: screen.height,\n      opacity: '0.5',\n      zIndex: 1,\n      backgroundColor: Theme.color.greyColor,\n   },\n   circle: {\n      color: Theme.color.primaryColor,\n      position: 'absolute',\n      left: window.innerWidth * 0.5 - 24,\n      top: screen.height * 0.5 - 40,\n   },\n}))\n\nconst Loading: FC<Props> = ({ isLoading }: { isLoading: boolean }) => {\n   const classes = useStyles()\n\n   return (\n      <>\n         {isLoading && (\n            <div className={classes.root}>\n               <CircularProgress size={80} className={classes.circle} />\n            </div>\n         )}\n      </>\n   )\n}\n\nexport default Loading\n","import Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport { makeStyles } from '@material-ui/core/styles'\nimport React, { useState, FC } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport { Api } from '../../action/action'\nimport Theme from '../../utils/theme'\nimport Loading from '../Loading'\n\nconst useStyles = makeStyles((theme) => ({\n   form: {\n      textAlign: 'center',\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%,-50%)',\n   },\n   button: {\n      marginTop: theme.spacing(2),\n      backgroundColor: Theme.color.primaryColor,\n      color: 'white',\n      '&:hover': {\n         background: 'white',\n         color: Theme.color.primaryColor,\n      },\n   },\n}))\n\nconst LoginForm: FC = () => {\n   const history = useHistory()\n   const classes = useStyles()\n   const [emailText, setEmailText] = useState('')\n   const [passwordText, setPasswordText] = useState('')\n   const [hasError, setHasError] = useState(false)\n   const [isLoading, setIsLoading] = useState(false)\n\n   const handleSubmit = () => {\n      setIsLoading(true)\n      Api.login(emailText, passwordText).then((res: any) => {\n         if (res) {\n            localStorage.setItem('userInfo', JSON.stringify(res))\n            history.push({ pathname: '/schedule', state: res })\n         } else {\n            setHasError(true)\n         }\n         setIsLoading(false)\n      })\n   }\n\n   return (\n      <Grid\n         container\n         justifyContent=\"center\"\n         alignItems=\"center\"\n         className={classes.form}\n         spacing={4}\n      >\n         <Grid item xs={6} sm={6} md={4} lg={4}>\n            <TextField\n               error={hasError}\n               id=\"email\"\n               type=\"email\"\n               label=\"Email\"\n               fullWidth\n               onChange={(e: any) => {\n                  setEmailText(e.target.value)\n               }}\n            />\n            <TextField\n               error={hasError}\n               id=\"password\"\n               label=\"Password\"\n               fullWidth\n               onChange={(e: any) => {\n                  setPasswordText(e.target.value)\n               }}\n            />\n            <Loading isLoading={isLoading} />\n            <Button\n               variant=\"contained\"\n               className={classes.button}\n               onClick={handleSubmit}\n            >\n               LOGIN\n            </Button>\n         </Grid>\n      </Grid>\n   )\n}\nexport default LoginForm\n","import React, { FC } from 'react'\r\n\r\nimport LoginForm from '../uiParts/loginForm'\r\n\r\nconst SignInTemplate: FC = () => {\r\n   return (\r\n      <div>\r\n         <LoginForm />\r\n      </div>\r\n   )\r\n}\r\nexport default SignInTemplate\r\n","import React, { FC } from 'react'\r\n\r\nimport SignInTemplate from '../templates/signInTemplate'\r\n\r\nconst SignIn: FC = () => {\r\n   return <SignInTemplate />\r\n}\r\n\r\nexport default SignIn\r\n","import React, { FC } from 'react'\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom'\n\nimport Schedule from './components/pages/schedule'\nimport SignIn from './components/pages/signIn'\n\nconst App: FC = () => {\n   return (\n      <Router>\n         <Switch>\n            <Route exact path=\"/\">\n               <SignIn />\n            </Route>\n            <Route exact path=\"/schedule\">\n               <Schedule />\n            </Route>\n            <Route>\n               <NoMatch />\n            </Route>\n         </Switch>\n      </Router>\n   )\n}\n\nexport default App\n\nconst NoMatch = () => <h2>Not Found</h2>\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n   if (onPerfEntry && onPerfEntry instanceof Function) {\n      import('web-vitals').then(\n         ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry)\n            getFID(onPerfEntry)\n            getFCP(onPerfEntry)\n            getLCP(onPerfEntry)\n            getTTFB(onPerfEntry)\n         }\n      )\n   }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\n\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n   <React.StrictMode>\n      <App />\n   </React.StrictMode>,\n   document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}